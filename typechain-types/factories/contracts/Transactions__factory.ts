/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Transactions,
  TransactionsInterface,
} from "../../contracts/Transactions";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feePercent",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "keyword",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "string",
        name: "keyword",
        type: "string",
      },
    ],
    name: "addTransaction",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "changeFeeValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeAccount",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllTransactions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "transactionFee",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "message",
            type: "string",
          },
          {
            internalType: "string",
            name: "keyword",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Transactions.TransferStruct[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001acb38038062001acb833981810160405281019062000037919062000193565b60016000819055506200005f62000053620000ae60201b60201c565b620000b660201b60201c565b33600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060038190555050620001e3565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200018d81620001c9565b92915050565b600060208284031215620001a657600080fd5b6000620001b6848285016200017c565b91505092915050565b6000819050919050565b620001d481620001bf565b8114620001e057600080fd5b50565b6118d880620001f36000396000f3fe6080604052600436106100915760003560e01c80637fa7963d116100595780637fa7963d1461014a5780637fd6f15c146101735780638da5cb5b1461019e578063b77bf600146101c9578063f2fde38b146101f457610091565b806327506f53146100965780632e7700f0146100c157806365e17c9d146100ec5780636d1b6bb114610117578063715018a614610133575b600080fd5b3480156100a257600080fd5b506100ab61021d565b6040516100b891906111f5565b60405180910390f35b3480156100cd57600080fd5b506100d661046a565b6040516100e391906112f7565b60405180910390f35b3480156100f857600080fd5b50610101610474565b60405161010e919061115d565b60405180910390f35b610131600480360381019061012c9190610d8a565b61049a565b005b34801561013f57600080fd5b506101486108fd565b005b34801561015657600080fd5b50610171600480360381019061016c9190610e1d565b610985565b005b34801561017f57600080fd5b50610188610a0b565b60405161019591906112f7565b60405180910390f35b3480156101aa57600080fd5b506101b3610a11565b6040516101c09190611142565b60405180910390f35b3480156101d557600080fd5b506101de610a3b565b6040516101eb91906112f7565b60405180910390f35b34801561020057600080fd5b5061021b60048036038101906102169190610d61565b610a41565b005b60606005805480602002602001604051908101604052809291908181526020016000905b8282101561046157838290600052602060002090600702016040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201805461033490611553565b80601f016020809104026020016040519081016040528092919081815260200182805461036090611553565b80156103ad5780601f10610382576101008083540402835291602001916103ad565b820191906000526020600020905b81548152906001019060200180831161039057829003601f168201915b505050505081526020016005820180546103c690611553565b80601f01602080910402602001604051908101604052809291908181526020018280546103f290611553565b801561043f5780601f106104145761010080835404028352916020019161043f565b820191906000526020600020905b81548152906001019060200180831161042257829003601f168201915b5050505050815260200160068201548152505081526020019060010190610241565b50505050905090565b6000600254905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260005414156104e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d790611277565b60405180910390fd5b60026000819055506000831161052b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610522906112b7565b60405180910390fd5b600361053683610b39565b1015610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056e90611257565b60405180910390fd5b600361058282610b39565b10156105c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ba90611297565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610632576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610629906112d7565b60405180910390fd5b60026000815480929190610645906115b6565b9190505550600060646003548561065c91906113ff565b61066691906113ce565b90508473ffffffffffffffffffffffffffffffffffffffff166108fc828661068e9190611459565b9081150290604051600060405180830381858888f193505050501580156106b9573d6000803e3d6000fd5b50600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610722573d6000803e3d6000fd5b5060056040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff16815260200183876107749190611459565b815260200183815260200185815260200184815260200142815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004019080519060200190610876929190610c17565b5060a0820151816005019080519060200190610893929190610c17565b5060c0820151816006015550507f9e789a5ac971adf3c9c95f3f9fe9ea5ef049b380fdbe2a023ebc8a9cd6173b64338683876108cf9190611459565b848787426040516108e69796959493929190611178565b60405180910390a150600160008190555050505050565b610905610b49565b73ffffffffffffffffffffffffffffffffffffffff16610923610a11565b73ffffffffffffffffffffffffffffffffffffffff1614610979576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097090611237565b60405180910390fd5b6109836000610b51565b565b61098d610b49565b73ffffffffffffffffffffffffffffffffffffffff166109ab610a11565b73ffffffffffffffffffffffffffffffffffffffff1614610a01576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f890611237565b60405180910390fd5b8060038190555050565b60035481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b610a49610b49565b73ffffffffffffffffffffffffffffffffffffffff16610a67610a11565b73ffffffffffffffffffffffffffffffffffffffff1614610abd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab490611237565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2490611217565b60405180910390fd5b610b3681610b51565b50565b6000808251905080915050919050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054610c2390611553565b90600052602060002090601f016020900481019282610c455760008555610c8c565b82601f10610c5e57805160ff1916838001178555610c8c565b82800160010185558215610c8c579182015b82811115610c8b578251825591602001919060010190610c70565b5b509050610c999190610c9d565b5090565b5b80821115610cb6576000816000905550600101610c9e565b5090565b6000610ccd610cc884611337565b611312565b905082815260208101848484011115610ce557600080fd5b610cf0848285611511565b509392505050565b600081359050610d078161185d565b92915050565b600081359050610d1c81611874565b92915050565b600082601f830112610d3357600080fd5b8135610d43848260208601610cba565b91505092915050565b600081359050610d5b8161188b565b92915050565b600060208284031215610d7357600080fd5b6000610d8184828501610cf8565b91505092915050565b60008060008060808587031215610da057600080fd5b6000610dae87828801610d0d565b9450506020610dbf87828801610d4c565b935050604085013567ffffffffffffffff811115610ddc57600080fd5b610de887828801610d22565b925050606085013567ffffffffffffffff811115610e0557600080fd5b610e1187828801610d22565b91505092959194509250565b600060208284031215610e2f57600080fd5b6000610e3d84828501610d4c565b91505092915050565b6000610e528383611081565b905092915050565b610e63816114db565b82525050565b610e728161149f565b82525050565b610e818161149f565b82525050565b610e908161148d565b82525050565b610e9f8161148d565b82525050565b6000610eb082611378565b610eba818561139b565b935083602082028501610ecc85611368565b8060005b85811015610f085784840389528151610ee98582610e46565b9450610ef48361138e565b925060208a01995050600181019050610ed0565b50829750879550505050505092915050565b6000610f2582611383565b610f2f81856113ac565b9350610f3f818560208601611520565b610f48816116bb565b840191505092915050565b6000610f5e82611383565b610f6881856113bd565b9350610f78818560208601611520565b610f81816116bb565b840191505092915050565b6000610f996026836113bd565b9150610fa4826116cc565b604082019050919050565b6000610fbc6020836113bd565b9150610fc78261171b565b602082019050919050565b6000610fdf6022836113bd565b9150610fea82611744565b604082019050919050565b6000611002601f836113bd565b915061100d82611793565b602082019050919050565b60006110256022836113bd565b9150611030826117bc565b604082019050919050565b60006110486017836113bd565b91506110538261180b565b602082019050919050565b600061106b601f836113bd565b915061107682611834565b602082019050919050565b600060e0830160008301516110996000860182610e87565b5060208301516110ac6020860182610e69565b5060408301516110bf6040860182611124565b5060608301516110d26060860182611124565b50608083015184820360808601526110ea8282610f1a565b91505060a083015184820360a08601526111048282610f1a565b91505060c083015161111960c0860182611124565b508091505092915050565b61112d816114d1565b82525050565b61113c816114d1565b82525050565b60006020820190506111576000830184610e96565b92915050565b60006020820190506111726000830184610e78565b92915050565b600060e08201905061118d600083018a610e96565b61119a6020830189610e5a565b6111a76040830188611133565b6111b46060830187611133565b81810360808301526111c68186610f53565b905081810360a08301526111da8185610f53565b90506111e960c0830184611133565b98975050505050505050565b6000602082019050818103600083015261120f8184610ea5565b905092915050565b6000602082019050818103600083015261123081610f8c565b9050919050565b6000602082019050818103600083015261125081610faf565b9050919050565b6000602082019050818103600083015261127081610fd2565b9050919050565b6000602082019050818103600083015261129081610ff5565b9050919050565b600060208201905081810360008301526112b081611018565b9050919050565b600060208201905081810360008301526112d08161103b565b9050919050565b600060208201905081810360008301526112f08161105e565b9050919050565b600060208201905061130c6000830184611133565b92915050565b600061131c61132d565b90506113288282611585565b919050565b6000604051905090565b600067ffffffffffffffff8211156113525761135161168c565b5b61135b826116bb565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006113d9826114d1565b91506113e4836114d1565b9250826113f4576113f361162e565b5b828204905092915050565b600061140a826114d1565b9150611415836114d1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561144e5761144d6115ff565b5b828202905092915050565b6000611464826114d1565b915061146f836114d1565b925082821015611482576114816115ff565b5b828203905092915050565b6000611498826114b1565b9050919050565b60006114aa826114b1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006114e6826114ed565b9050919050565b60006114f8826114ff565b9050919050565b600061150a826114b1565b9050919050565b82818337600083830152505050565b60005b8381101561153e578082015181840152602081019050611523565b8381111561154d576000848401525b50505050565b6000600282049050600182168061156b57607f821691505b6020821081141561157f5761157e61165d565b5b50919050565b61158e826116bb565b810181811067ffffffffffffffff821117156115ad576115ac61168c565b5b80604052505050565b60006115c1826114d1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115f4576115f36115ff565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4d696e696d756d206d657373616765206c656e6774682073686f756c6420626560008201527f2033000000000000000000000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f4d696e696d756d206b6579776f7264206c656e6774682073686f756c6420626560008201527f2033000000000000000000000000000000000000000000000000000000000000602082015250565b7f57726f6e67207472616e73616374696f6e2076616c7565000000000000000000600082015250565b7f596f752063616e6e6f74207472616e7366657220746f20796f757273656c6600600082015250565b6118668161148d565b811461187157600080fd5b50565b61187d8161149f565b811461188857600080fd5b50565b611894816114d1565b811461189f57600080fd5b5056fea2646970667358221220a34d7f357a24ff659f38aff2f7853db0f7d7847e49b8a8f2dd13783e9669c3e964736f6c63430008040033";

type TransactionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransactionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transactions__factory extends ContractFactory {
  constructor(...args: TransactionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _feePercent: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Transactions> {
    return super.deploy(_feePercent, overrides || {}) as Promise<Transactions>;
  }
  override getDeployTransaction(
    _feePercent: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_feePercent, overrides || {});
  }
  override attach(address: string): Transactions {
    return super.attach(address) as Transactions;
  }
  override connect(signer: Signer): Transactions__factory {
    return super.connect(signer) as Transactions__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransactionsInterface {
    return new utils.Interface(_abi) as TransactionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Transactions {
    return new Contract(address, _abi, signerOrProvider) as Transactions;
  }
}
